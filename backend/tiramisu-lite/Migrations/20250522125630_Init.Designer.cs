// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using tiramisu_lite.Database;

#nullable disable

namespace tiramisu_lite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250522125630_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("tiramisu_lite.Model.Meal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Kcal")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PlanerItemId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PlanerItemId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("tiramisu_lite.Model.Planer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Planers");
                });

            modelBuilder.Entity("tiramisu_lite.Model.PlanerItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("EatTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Notify")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PlanerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlanerId");

                    b.ToTable("PlanerItems");
                });

            modelBuilder.Entity("tiramisu_lite.Model.Profile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("AvatarBase64")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("tiramisu_lite.Model.ShoppingList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProfileId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("tiramisu_lite.Model.ShoppingListItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ShoppingListId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListItems");
                });

            modelBuilder.Entity("tiramisu_lite.Model.Meal", b =>
                {
                    b.HasOne("tiramisu_lite.Model.PlanerItem", "PlanerItem")
                        .WithMany("Meals")
                        .HasForeignKey("PlanerItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanerItem");
                });

            modelBuilder.Entity("tiramisu_lite.Model.PlanerItem", b =>
                {
                    b.HasOne("tiramisu_lite.Model.Planer", "Planer")
                        .WithMany("Items")
                        .HasForeignKey("PlanerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planer");
                });

            modelBuilder.Entity("tiramisu_lite.Model.Profile", b =>
                {
                    b.HasOne("tiramisu_lite.Model.Planer", "Planer")
                        .WithOne("Profile")
                        .HasForeignKey("tiramisu_lite.Model.Profile", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planer");
                });

            modelBuilder.Entity("tiramisu_lite.Model.ShoppingList", b =>
                {
                    b.HasOne("tiramisu_lite.Model.Profile", "Profile")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("tiramisu_lite.Model.ShoppingListItem", b =>
                {
                    b.HasOne("tiramisu_lite.Model.ShoppingList", "ShoppingList")
                        .WithMany("ShoppingListItems")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("tiramisu_lite.Model.Planer", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Profile")
                        .IsRequired();
                });

            modelBuilder.Entity("tiramisu_lite.Model.PlanerItem", b =>
                {
                    b.Navigation("Meals");
                });

            modelBuilder.Entity("tiramisu_lite.Model.Profile", b =>
                {
                    b.Navigation("ShoppingLists");
                });

            modelBuilder.Entity("tiramisu_lite.Model.ShoppingList", b =>
                {
                    b.Navigation("ShoppingListItems");
                });
#pragma warning restore 612, 618
        }
    }
}
